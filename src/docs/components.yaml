# Common references
components:
  schemas:
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true # Returned by HTTP GET
        name:
          type: string
          description: contact name
        email:
          type: string
          format: email
          description: contact email
        address:
          type: string
          description: contact address
        phone:
          type: string
          description: contact phone number
        favorite:
          type: integer
          enum: [0, 1]
          default: 0
          description: favorite contact
        avatar:
          type: string
          readOnly: true # Returned by HTTP GET
          description: contact avatar file path
        avatarFile:
          type: string
          format: binary
          writeOnly: true # Used in POST/PUT/PATCH
          description: contact avatar file
    PaginationMetadata:
      type: object
      properties:
        totalRecords:
          type: integer
          default: 0
          description: The total number of records
        firstPage:
          type: integer
          default: 1
          description: The first page
        lastPage:
          type: integer
          default: 1
          description: The last page
        page:
          type: integer
          default: 1
          description: The current page
        limit:
          type: integer
          default: 5
          description: The number of records per page

  responses:
    "200NoData":
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: The response status
                enum:
                  - success
              data:
                type: object
                nullable: true
                default: null
                description: The response data
    "201Created":
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: The response status
                enum:
                  - success
              data:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the created resource
                  name:
                    type: string
                    description: The name of the created resource
            example:
              status: success
              data:
                id: 1
                name: "John Doe"
    "400BadRequest":
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: The response status
                enum:
                  - fail
              message:
                type: string
                description: Error message explaining what was wrong with the request
            example:
              status: fail
              message: "Invalid input data"
    "404NotFound":
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: The response status
                enum:
                  - fail
              message:
                type: string
                description: A description of why the resource was not found
            example:
              status: fail
              message: "Resource not found"
    "500InternalServerError":
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: The response status
                enum:
                  - error
              message:
                type: string
                description: A generic error message
            example:
              status: error
              message: "Internal server error"

  parameters:
    contactIdParam:
      name: id
      description: Contact ID
      required: true
      in: path
      schema:
        type: integer

    limitParam:
      name: limit
      description: Number of records per page
      in: query
      schema:
        type: integer
        default: 5
        minimum: 1
        maximum: 100
      required: false

    pageParam:
      name: page
      description: Page number of records
      in: query
      schema:
        type: integer
        default: 1
        minimum: 1
      required: false
